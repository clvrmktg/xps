@use '../abstracts' as *
  
.container
  display: grid
  grid-template-rows: [ navbar-start ] max-content [ navbar-end main-start ] 1fr [main-end cta-start] max-content [cta-end footer-start] max-content [footer-end]
  +svh(min-height, 100)

.navbar
  grid-row: navbar

.main
  grid-row: main

.cta
  grid-row: cta

.footer
  grid-row: footer


// https://ryanmulligan.dev/blog/layout-breakouts/

.content-grid
  --padding-inline: 2em
  --content-max-width: #{rem(1152)}
  --breakout-max-width: #{rem(1200)}

  --content-size: min(100% - ((var(--padding-inline) * 2) + env(safe-area-inset-left) + env(safe-area-inset-right)), var(--content-max-width))
  --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2)
  
  display: grid
  grid-template-columns: [full-width-start] minmax(max(var(--padding-inline), env(safe-area-inset-left)), 1fr) [breakout-start] minmax(0, var(--breakout-size)) [content-start] var((--content-size)) [content-end] minmax(0, var(--breakout-size)) [breakout-end] minmax(max(var(--padding-inline), env(safe-area-inset-right)), 1fr)  [full-width-end]
  // padding-inline: env(safe-area-inset-left) env(safe-area-inset-right)

  > .breakout
    grid-column: breakout

  > .full-width
    grid-column: full-width

.content-grid, .full-width

  > :not(.breakout, .full-width)
    grid-column: content

.grid
  display: grid

.flex
  display: flex

.lg\:flex
  +breakpoint('desktop')
    display: flex

.flex--col
  @extend .flex
  flex-direction: column

.lg\:flex--col
  +breakpoint('desktop')
  @extend .flex
  flex-direction: column

.flex--row
  @extend .flex
  flex-direction: row

.lg\:flex--row
  +breakpoint('desktop')
  @extend .flex
  flex-direction: row


// X Axis
.middle
  align-items: center

// Y Axis
.center
  justify-content: center

// Spacing
.between
  justify-content: space-between


.end
  justify-content: flex-end

+width(700)